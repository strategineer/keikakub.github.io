class DiceResult{constructor({die:e="",value:t=0}){this.die=e,this.value=t}toString(){return this.value}toJSON(){return{className:"DiceResult",die:this.die,value:this.value}}}class DiceRoller{getSingleDieResult(e){return randomInteger(1,e)}applyDieMod(e,t){const n=t.match(/^([dklh]{2})([0-9]*)$/);if(n===null)return e;const s=n[2]?parseInt(n[2]):1;switch(n[1]){case"dl":return e.sort((e,t)=>e-t),e.splice(0,s),e;case"dh":return e.sort((e,t)=>t-e),e.splice(0,s),e;case"kl":return e.sort((e,t)=>e-t),e.slice(0,s);case"kh":return e.sort((e,t)=>t-e),e.slice(0,s);default:return e}}_parseDiceNotation(e=6,t=1,n=0,s="+",o=""){n=parseInt(n,10),e=parseInt(e,10),t<=0?t=1:t=parseInt(t,10);let a=[];for(let n=1;n<=t;n++)a.push(this.getSingleDieResult(e));o!==""&&(a=this.applyDieMod(a,o));let i=0;if(a.length>0&&(i=a.reduce((e,t)=>e+t)),n===0)return i;switch(s){case"*":i=i*n;break;case"-":i=i-n;break;case"/":i=i/n;break;case"+":default:i=i+n;break}return Math.round(i)}rollDie(e=""){e=e.trim();const t=e.match(/^([0-9]*)d([0-9]+)([dklh]{2}[0-9]*)*(?:([+\-*/])([0-9]+))*$/);return t?this._parseDiceNotation(t[2],t[1],t[5],t[4],t[3]):""}getDiceResult(e=""){return new DiceResult({die:e,value:this.rollDie(e)})}}const rollDie=function(e=""){const t=new DiceRoller;return t.rollDie(e)},getDiceResult=function(e=""){const t=new DiceRoller;return new DiceResult({die:e,value:t.rollDie(e)})};let name_set={},chain_cache={},gen_data={},gen_debug=!1,strip_page_numbers=!0;function generate_name(e){let t;return(t=markov_chain(e))?gen_debug?"["+e+":"+markov_name(t)+"]":markov_name(t):""}function name_list(e,t){let s=[],n;for(n=0;n<t;n++)s.push(generate_name(e));return s.join("<hr>")}function markov_chain(e){let n;if(n=chain_cache[e])return n;let t;if((t=name_set[e])&&t.length){let n;if(n=construct_chain(t))return chain_cache[e]=n,n}return!1}function construct_chain(e){let t={},n;for(n=0;n<e.length;n++){let o=e[n].split(/\s+/);t=incr_chain(t,"parts",o.length);let s;for(s=0;s<o.length;s++){let n=o[s];t=incr_chain(t,"name_len",n.length);let i=n.substr(0,1);t=incr_chain(t,"initial",i);let e=n.substr(1),a=i;for(;e.length>0;){let n=e.substr(0,1);t=incr_chain(t,a,n),e=e.substr(1),a=n}}}return scale_chain(t)}function incr_chain(e,t,n){return e[t]?e[t][n]?e[t][n]++:e[t][n]=1:(e[t]={},e[t][n]=1),e}function scale_chain(e){let t={};return Object.keys(e).forEach(n=>{t[n]=0,Object.keys(e[n]).forEach(s=>{let i=e[n][s],o=Math.floor(Math.pow(i,1.3));e[n][s]=o,t[n]+=o})}),e.table_len=t,e}function markov_name(e){let s=select_link(e,"parts"),n=[],t;for(t=0;t<s;t++){let r=select_link(e,"name_len"),o=select_link(e,"initial"),i=o,a=o;for(;i.length<r;){if(o=select_link(e,a),!o)break;i+=o,a=o}n.push(i)}return n.join(" ")}function select_link(e,t){let s=e.table_len[t];if(!s)return!1;let a=Math.floor(Math.random()*s),o=Object.keys(e[t]),i=0,n;for(n=0;n<o.length;n++){let s=o[n];if(i+=e[t][s],i>a)return s}return!1}function generate_text(e){let t;if(t=gen_data[e]){let n;if(n=select_from(t))return gen_debug?"["+e+":"+expand_tokens(n).trim()+"]":expand_tokens(n).trim()}return""}function generate_list(e,t){let s=[],n;for(n=0;n<t;n++)s.push(generate_text(e));return s.join("<hr>")}function select_from(e){return e.constructor==Array?select_from_array(e):select_from_table(e)}function select_from_array(e){return e[Math.floor(Math.random()*e.length)]}function select_from_table(e){let t;if(t=scale_table(e)){let s=Math.floor(Math.random()*t)+1,n;for(n in e){let t=key_range(n);if(s>=t[0]&&s<=t[1])return e[n]}}return""}function scale_table(e){let t=0,n;for(n in e){let s=key_range(n);s[1]>t&&(t=s[1])}return t}function key_range(e){let t;return(t=/(\d+)-00/.exec(e))?[parseInt(t[1]),100]:(t=/(\d+)-(\d+)/.exec(e))?[parseInt(t[1]),parseInt(t[2])]:e=="00"?[100,100]:[parseInt(e),parseInt(e)]}function expand_tokens(e){let t;for(;t=/{(\d+d\d+)}/.exec(e);){let n=t[1];e=e.replace("{"+n+"}",roll(n))}for(;t=/{(\w+)}/.exec(e);){let n=t[1],s;(s=generate_text(n))?e=e.replace("{"+n+"}",s):(s=generate_name(n))?e=e.replace("{"+n+"}",s):e=e.replace("{"+n+"}",n)}return strip_page_numbers?e.replace(/\(p. \d+ ?\)/i,""):e}function roll(e,t){const n=getDiceResult(e);return t&&(t.innerHTML=`${e}: ${n.value}`),n.value}function rollOnManyTables(e,t,n){tables=zip(t,n);for(var i,a,s=0,o=[];s<tables.length;){const t=tables[s];i="",a="",o.push(`${e[s]}: ${i}${rollOnTable(e[s],t[0],t[1],1)}${a}`),s+=1}return o.join(" / ")}function rollOnTable(e,t,n,s){const r={key:e,title:e,tables:{default:n}},c=s===1;typeof s=="string"&&(s=getDiceResult(s).value);const l=new TableRoller,d=new RandomTable(r);for(var a,o=[],i=0;i<s;){const s=l.getTableResult(d),e=t.split("|").map(e=>e.trim()).filter(e=>e),n=s[0].result.split("|").map(e=>e.trim()).filter(e=>e);a=e.map(function(t,s){return e.length==1?n[s]:`${t}: ${n[s]}`}),o.push(a.join(" / ")),i+=1}if(!c){const t=o.map(function(e,t){return`${t}: ${o[t]}`});return`${s} ${e}: / ${t.join(" / ")}`}return o.join(" / ")}